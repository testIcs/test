<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zxkj.dao.PayHistoryMapper">
	
	
	<select id="queryApplyMoneyHistoryCnt" resultType="int">
		select count(1)	
		from tbl_apply_money t ,tbl_paygate t1 
		where t.paygate_type = t1.paygate_type 
			and t.apply_status in (1,2)
			<if test="applyStartDate != null and applyStartDate !=''">
				and t.beginApply_date >= date_format(#{applyStartDate},'%Y%m%d')
			</if>
			<if test="applyEndDate != null and applyEndDate !=''">
				<![CDATA[ and t.beginApply_date < date_format(#{applyEndDate},'%Y%m%d') +1 ]]>
			</if>
			<if test="account != null and account!=''">
				and t.account like '%${account}%'
			</if>
			<if test="realName != null and realName!=''">
				and t.real_name like '%${realName}%'
			</if>
	</select>
	
	<select id="queryApplyMoneyHistory" resultType="applyMoneyVO" parameterType="java.util.HashMap">
		select t.id id,
			t.applyFlow_no applyFlowNO,
			t.user_id userID,
			t.apply_money applyMoney,
			DATE_FORMAT(t.beginApply_date,'%Y-%m-%d %H:%i:%s') beginApplyDate,
			DATE_FORMAT(t.endApply_date,'%Y-%m-%d %H:%i:%s') endApplyDate,
			t.apply_status applyStatus,
			t1.paygate_name paygateName,
			t.account account,
			t.real_name realName
		from tbl_apply_money t ,tbl_paygate t1 
		where t.paygate_type = t1.paygate_type 
			and t.apply_status in (1,2)
			<if test="applyStartDate != null and applyStartDate !=''">
				and (t.beginApply_date >= #{applyStartDate})
				<!--  
				and t.beginApply_date >= date_format(#{applyStartDate},'%Y%m%d')
				-->
			</if>
			<if test="applyEndDate != null and applyEndDate !=''">
			and (DATE_ADD(#{applyEndDate},INTERVAL 1 DAY) > t.beginApply_date)
			<!--  
				<![CDATA[ and t.beginApply_date < date_format(#{applyEndDate},'%Y%m%d') +1 ]]>
				-->
			</if>
			<if test="account != null and account!=''">
				and t.account like '%${account}%'
			</if>
			<if test="realName != null and realName!=''">
				and t.real_name like '%${realName}%'
			</if>
		order by t.id desc
		limit #{start},#{rows}		
	</select>
	
	<select id="queryApplyMoneyHistoryAuditInfo" resultType="java.util.HashMap" parameterType="string">
		select DATE_FORMAT(audit_date,'%Y-%m-%d %H:%i:%s') audit_date,
		audit_user 
		from 
		tbl_apply_money_history 
		where id = 
		( select max(id) from tbl_apply_money_history where applyFlow_no = #{applyFlowNO})
	</select>
	
	<select id="queryPayFlowRecordCnt" resultType="int" parameterType="java.util.HashMap">
		select count(1)
		from tbl_pay_flowrecord t,tbl_apply_money t1 ,tbl_paygate t2  
		where t.businessFlow_no = t1.applyFlow_no
   			and t1.paygate_type = t2.paygate_type
		    and t.pay_status in ( ${payStatus} )
		<if test="applyStartDate != null and applyStartDate !=''">
			and t1.beginApply_date >= date_format(#{applyStartDate},'%Y%m%d')
		</if>
		<if test="applyEndDate != null and applyEndDate !=''">
			<![CDATA[ and t1.beginApply_date < date_format(#{applyEndDate},'%Y%m%d') +1 ]]>
		</if>
		<if test="account != null and account!=''">
			and t1.account like '%${account}%'
		</if>
		<if test="realName != null and realName!=''">
			and t1.real_name like '%${realName}%'
		</if>
		<if test="payStartDate != null and payStartDate !=''">
			and t.pay_time >= date_format(#{payStartDate},'%Y%m%d')
		</if>
		<if test="payEndDate != null and payEndDate !=''">
			<![CDATA[ and t.pay_time < date_format(#{payEndDate},'%Y%m%d') +1 ]]>
		</if>
		<if test="exportFlag != null and exportFlag !=''">
			and t.export_flag = ${exportFlag}
		</if>
	</select>
	
	<select id="queryPayFlowRecord" resultType="payFlowRecord" parameterType="java.util.HashMap">
		select t.id id,
			t.businessFlow_no businessFlowNo,
			t.thirdorder_no thirdOrderNo,
			t.pay_status payStatus,
			t.pay_account payAccount,
			DATE_FORMAT(t.pay_time,'%Y-%m-%d %H:%i:%s') payTime,
			t.pay_money payMoney,
			t.pay_remark payRemark,
			t.beforepay_money beforePayMoney,
			t.afterpay_money afterPayMoney,
			t.export_flag exportFlag,
			t1.applyFlow_no applyFlowNo,
		    t1.user_id userId,
		    t1.apply_money applyMoney,
		    DATE_FORMAT(t1.beginApply_date,'%Y-%m-%d %H:%i:%s') beginApplyDate,
		    t1.apply_status applyStatus,
		    t1.account account,
		    t1.real_name realName,
		    t2.paygate_name paygateName		    
		from 
			tbl_pay_flowrecord t,
			tbl_apply_money t1 ,
			tbl_paygate t2  
		where 
			t.businessFlow_no = t1.applyFlow_no
   			and 
   			t1.paygate_type = t2.paygate_type
   			and 
   			t.pay_status in ( ${payStatus} )
	   		<if test="applyStartDate != null and applyStartDate !=''">
	   			and (t1.beginApply_date >= #{applyStartDate})
			<!--  	and t1.beginApply_date >= date_format(#{applyStartDate},'%Y%m%d')-->
			</if>
			<if test="applyEndDate != null and applyEndDate !=''">
				and (DATE_ADD(#{applyEndDate},INTERVAL 1 DAY) > t1.beginApply_date)
				<!-- <![CDATA[ and t1.beginApply_date < date_format(#{applyEndDate},'%Y%m%d') +1 ]]>-->
			</if>
			<if test="account != null and account!=''">
				and t1.account like '%${account}%'
			</if>
			<if test="realName != null and realName!=''">
				and t1.real_name like '%${realName}%'
			</if>
			<if test="payStartDate != null and payStartDate !=''">
				and ( t.pay_time >= #{payStartDate})
				<!--and t.pay_time >= date_format(#{payStartDate},'%Y%m%d')-->
			</if>
			<if test="payEndDate != null and payEndDate !=''">
				and (DATE_ADD(#{payEndDate},INTERVAL 1 DAY) > t.pay_time)
				<!-- <![CDATA[ and t.pay_time < date_format(#{payEndDate},'%Y%m%d') +1 ]]> -->
			</if>
			<if test="exportFlag != null and exportFlag !=''">
				and t.export_flag = ${exportFlag}
			</if>
			order by t.id desc
			limit #{start},#{rows}		
	</select>	
	
	<update id="updatePayFlowRecordSuccess" parameterType="java.util.HashMap">
		update tbl_pay_flowrecord set 
		       thirdorder_no = #{thirdOrderNo},
		       pay_status = #{payStatus},
		       pay_account = #{payAccount},
		       pay_money = #{payMoney},
		       afterpay_money = #{afterPayMoney},
		       pay_remark = '',
		       <if test="payTime != ''">
			   	pay_time =#{payTime}
			   </if>
			   <if test="payTime == ''">
			   	pay_time = now()
			   </if>			   	        
		where id =#{id}
	</update>
	
	<update id="updatePayFlowRecordFail" parameterType="java.util.HashMap">
		update tbl_pay_flowrecord set		       
		       pay_status = #{payStatus},
		       afterpay_money = beforepay_money,
		       pay_time = NULL,
		       pay_remark = #{remark}
		where id =#{id}
	</update>
	
	<update id="updatePayFlowRecordFailClose" parameterType="java.util.HashMap">
		update tbl_pay_flowrecord set		       
		       pay_status = #{payStatus},
		       afterpay_money = beforepay_money	,
		       pay_remark = #{remark}	      
		where id =#{id}
	</update>
	
	<update id="updateExpenseInfoSuccess" parameterType="java.lang.String">
		update tbl_expense_info set        
		       already_apply_money = already_apply_money + freeze_money ,
		       freeze_money = 0
		where user_id = #{userId}
	</update>
	
	<update id="updateExpenseInfoFail" parameterType="java.lang.String">
		update tbl_expense_info set        
		       surplus_money = surplus_money + freeze_money ,
		       freeze_money = 0
		where user_id = #{userId}
	</update>
	
	<update id="updatePayFlowRecordExportFlag" parameterType="java.util.HashMap">
		update tbl_pay_flowrecord set export_flag = ${exportFlag} where id in (${ids})
	</update>
</mapper>